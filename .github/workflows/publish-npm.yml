name: Publish Package to npmjs

on:
  push: # remove in prod
    branches: [ main, master ]
  release:
    types: [published]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
      # Check if unscoped package name is available
      - name: Check package name availability
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name.replace('@nautilus-wraith/', '')")
          if npm view $PACKAGE_NAME &>/dev/null; then
            echo "Package name $PACKAGE_NAME is already taken. Publishing only scoped version."
            echo "PACKAGE_TAKEN=true" >> $GITHUB_ENV
          else
            echo "Package name $PACKAGE_NAME is available."
            echo "PACKAGE_TAKEN=false" >> $GITHUB_ENV
          fi
      # Publish scoped version
      - name: Publish scoped package
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # Publish unscoped version if available
      - name: Publish unscoped package
        if: env.PACKAGE_TAKEN == 'false'
        run: |
          # Temporarily modify package.json to remove scope
          PACKAGE_NAME=$(node -p "require('./package.json').name.replace('@nautilus-wraith/', '')")
          npm pkg set name=$PACKAGE_NAME
          npm publish --provenance --access public
          # Restore original package.json
          git checkout package.json
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}